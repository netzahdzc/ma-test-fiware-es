{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to the oHealth-Context application\n\n\noHealth-Context application is an initiative of the SmartSDK project that aims at collecting sensor data into standarized schemas and software infrastructure to facilitate the evaluation of paramtere of interes related to fall risk.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-the-ohealth-context-application",
            "text": "oHealth-Context application is an initiative of the SmartSDK project that aims at collecting sensor data into standarized schemas and software infrastructure to facilitate the evaluation of paramtere of interes related to fall risk.",
            "title": "Welcome to the oHealth-Context application"
        },
        {
            "location": "/introduction/",
            "text": "Introduction\n\n\nPopulation worldwide is aging as a result of improvements in health services and lower fertility rates. It is expected that by 2050, 20% of the population worldwide will be older adults. Functional capacity and independence tends to diminish with age due to limited mobility, lose of strength, or other physical or mental problems. As people age they tend to experience frailty, manifested with health and social challenges; such as decreasing vision, reduced mobility speed, loss of muscle mass, and partial hearing loss. These problems increase the demand for medication, lifestyle counselling, specialized assistance, and care attention. The increase in chronic and age-related diseases calls for a change from our current emphasis on managing disease towards an approach aimed at preventing them; including tools to infer, monitor and change behaviours that might hamper wellbeing.\n\n\nAdvances in mobile and wearable sensing are allowing the inference of activities and behaviors associated with health by facilitating the collection of daily-life data. Several research initiatives in this area are collecting large amounts of data from studies in diverse fields of healthcare and wellbeing raising the challenge of integrating heterogeneous datasets.\n\n\nAim\n\n\nThe generated application has been designed for research purposes, thus, parameters of interest (associated to the risk of falling) are analyzed a-posteriori and raw sensor data is kept allowing different stakeholders, such as patients and physicians to better understand how patients\u2019 activities and behaviours influence a healthier lifestyle.\n\n\nAudience\n\n\nThis document is intended to support:\n\n\n\n\nDevelopers and operators interested on using the mobile application and dashboard platform.\n\n\nDevelopers interested on adopting FIWARE and / or contributing to the initiative.",
            "title": "Introduction"
        },
        {
            "location": "/introduction/#introduction",
            "text": "Population worldwide is aging as a result of improvements in health services and lower fertility rates. It is expected that by 2050, 20% of the population worldwide will be older adults. Functional capacity and independence tends to diminish with age due to limited mobility, lose of strength, or other physical or mental problems. As people age they tend to experience frailty, manifested with health and social challenges; such as decreasing vision, reduced mobility speed, loss of muscle mass, and partial hearing loss. These problems increase the demand for medication, lifestyle counselling, specialized assistance, and care attention. The increase in chronic and age-related diseases calls for a change from our current emphasis on managing disease towards an approach aimed at preventing them; including tools to infer, monitor and change behaviours that might hamper wellbeing.  Advances in mobile and wearable sensing are allowing the inference of activities and behaviors associated with health by facilitating the collection of daily-life data. Several research initiatives in this area are collecting large amounts of data from studies in diverse fields of healthcare and wellbeing raising the challenge of integrating heterogeneous datasets.",
            "title": "Introduction"
        },
        {
            "location": "/introduction/#aim",
            "text": "The generated application has been designed for research purposes, thus, parameters of interest (associated to the risk of falling) are analyzed a-posteriori and raw sensor data is kept allowing different stakeholders, such as patients and physicians to better understand how patients\u2019 activities and behaviours influence a healthier lifestyle.",
            "title": "Aim"
        },
        {
            "location": "/introduction/#audience",
            "text": "This document is intended to support:   Developers and operators interested on using the mobile application and dashboard platform.  Developers interested on adopting FIWARE and / or contributing to the initiative.",
            "title": "Audience"
        },
        {
            "location": "/application/",
            "text": "Mobile application\n\n\nThe main purpose of the healthcare application is to expedite the harmonization and sharing of mobile sensing datasets for the healthcare domain. It focuses on mobile devices that collect data from sensors used on physical tests by following clinical protocols to assess the risk of falls.\n\n\nWalkthrough\n\n\nThe Mobility Assessment Test (a.k.a., MAT), is a mobile application developed on Android to collect sensor data from smarphones. It has been designed to appropriately guide users to conduct superviced physical test such as Timed Up and Go (a.k.a., TUG), Strength test, and Balance test.\n\n\nBelow images, describe the flow of the process a user should follow in order to run a test.\n\n\n- Log in\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe mechanism for logging in is very straightforward, first the user should sign-up, fill in a formulary that requires personal information such as name and age. Once, the user has been registered, he should log-in by typing required credentials (i.e. email and password) and pressing the [ Log-in ] button.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe main screen consiste of 3 key sections. (1) A left menu, that can be opened by pressing on the hamburger icon, (2) an addition button to register a new patient that will be observed / evaluated while performing a physical test, and (3) a patient list.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- Patient registration\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn order to register a new patient. Please, press the addition sign; previously mentioned, and fill in the formulary as it will be requested. \nNote that due privacy aspects, the photograph is not a mandatory field, thus, this could be leave as it is.\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAfter creating a patient record. The user can have access to the patient file by clicking on respective name (from the main section aforementioned). Optionally, control measurements can be recorded, such as height, waist size, heard rate, and so on, by filling in respective formulary.\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n\n\n\n\n\n\n- Test performance\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollecting data from a particular test, is one of the key features of the application. To do so, is it necessary to press on the [ Test ] button whiting the specific patient record.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThen, click on the name of the test to be performed, for example, Strength, or Balance test.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTUG Test (Test Up and Go).\n A simple test used to assess a person's mobility and requires both static and dynamic balance. It uses the time that a person takes to rise from a chair, walk three meters, turn around, walk back to the chair, and sit down\n\n\nStrenght test (a.k.a., 30-Second Chair Standard Test).\n Is administered using a folding chair without arms, with seat height of 17 inches (43.2 cm). The chair, with rubber tips on the legs, is placed against a wall to prevent it from moving\n\n\nBalance test (a.k.a., 4-Stage Balance Test).\n Is based on the assessment of postural hypotension. There are four progressively more challenging positions. Patients should not use an assistive device (cane or walker) and keep their eyes open. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndependently of the test selected. An illustrative tutorial will be displayed to guide the user along the process.\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n\n\n\n\n\n\nIt is important note that the device should be carried / wore on the lower back of the patient while performing the physical test, as illustrated on below image. Thus, an appropriately coordination to activate the application and place the device should be taken into account.\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn order to start the test, press the [ Start ] button, and (immediately) place the mobile device on the lower back of the patient.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAfter a countdown of 3 seconds, the application will start collecting sensor data. It is important to note that the application will stop to do so automatically (i.e., 30 seconds for the strength test and 10 seconds for the balance test), with the unique exception of the TUG test, which will stop until the user manually press the [ Finish ] button.\n\n\n\n\n\n\n\n\n \n \n\n\n\n\n\n\n\n\n- Evaluation of test performed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo qualitatively evaluate the test, tick on the answers based on your personal observation. Finally, rank the test and provide any textual feedback to be considerate by those attempting on using the collected data on research studies.\n\n\n\n\n\n\n\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIt is important, to follow direction and messages displayed by the application, so the data is appropriately stored. If there is no problem with the collected data, the patient's record will be update immediately, showing the date of the most recent test performed (as showed in below section of the Record screen).\n\n\n\n\n\n\n\n\n \n \n\n\n\n\n\n\n\n\n- Upload data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFinally, in order to upload the data towards the Fiware server. It is paramount to open the Settings section, located on the left menu. Then, click on the [ Upload Data ] buttons.\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n\n\n\n\n\n\n- Other services\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere are a few relevant services to take into consideration. For instance, in order to be able of uploading data to the Fiware server, it is necessary to hold an activation code (which keeps control of the users with privileges share data onto the main server). This data is controlled by the owner of the application, so, different mechanism could be used to provide it.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMoreover, complementary information about the applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnd ethical aspects can be found within respective section.",
            "title": "Mobile Application"
        },
        {
            "location": "/application/#mobile-application",
            "text": "The main purpose of the healthcare application is to expedite the harmonization and sharing of mobile sensing datasets for the healthcare domain. It focuses on mobile devices that collect data from sensors used on physical tests by following clinical protocols to assess the risk of falls.",
            "title": "Mobile application"
        },
        {
            "location": "/application/#walkthrough",
            "text": "The Mobility Assessment Test (a.k.a., MAT), is a mobile application developed on Android to collect sensor data from smarphones. It has been designed to appropriately guide users to conduct superviced physical test such as Timed Up and Go (a.k.a., TUG), Strength test, and Balance test.  Below images, describe the flow of the process a user should follow in order to run a test.",
            "title": "Walkthrough"
        },
        {
            "location": "/application/#-log-in",
            "text": "The mechanism for logging in is very straightforward, first the user should sign-up, fill in a formulary that requires personal information such as name and age. Once, the user has been registered, he should log-in by typing required credentials (i.e. email and password) and pressing the [ Log-in ] button.                   The main screen consiste of 3 key sections. (1) A left menu, that can be opened by pressing on the hamburger icon, (2) an addition button to register a new patient that will be observed / evaluated while performing a physical test, and (3) a patient list.",
            "title": "- Log in"
        },
        {
            "location": "/application/#-patient-registration",
            "text": "In order to register a new patient. Please, press the addition sign; previously mentioned, and fill in the formulary as it will be requested.  Note that due privacy aspects, the photograph is not a mandatory field, thus, this could be leave as it is.                           After creating a patient record. The user can have access to the patient file by clicking on respective name (from the main section aforementioned). Optionally, control measurements can be recorded, such as height, waist size, heard rate, and so on, by filling in respective formulary.",
            "title": "- Patient registration"
        },
        {
            "location": "/application/#-test-performance",
            "text": "Collecting data from a particular test, is one of the key features of the application. To do so, is it necessary to press on the [ Test ] button whiting the specific patient record.                   Then, click on the name of the test to be performed, for example, Strength, or Balance test.         TUG Test (Test Up and Go).  A simple test used to assess a person's mobility and requires both static and dynamic balance. It uses the time that a person takes to rise from a chair, walk three meters, turn around, walk back to the chair, and sit down  Strenght test (a.k.a., 30-Second Chair Standard Test).  Is administered using a folding chair without arms, with seat height of 17 inches (43.2 cm). The chair, with rubber tips on the legs, is placed against a wall to prevent it from moving  Balance test (a.k.a., 4-Stage Balance Test).  Is based on the assessment of postural hypotension. There are four progressively more challenging positions. Patients should not use an assistive device (cane or walker) and keep their eyes open.             Independently of the test selected. An illustrative tutorial will be displayed to guide the user along the process.                 It is important note that the device should be carried / wore on the lower back of the patient while performing the physical test, as illustrated on below image. Thus, an appropriately coordination to activate the application and place the device should be taken into account.               In order to start the test, press the [ Start ] button, and (immediately) place the mobile device on the lower back of the patient.                   After a countdown of 3 seconds, the application will start collecting sensor data. It is important to note that the application will stop to do so automatically (i.e., 30 seconds for the strength test and 10 seconds for the balance test), with the unique exception of the TUG test, which will stop until the user manually press the [ Finish ] button.",
            "title": "- Test performance"
        },
        {
            "location": "/application/#-evaluation-of-test-performed",
            "text": "To qualitatively evaluate the test, tick on the answers based on your personal observation. Finally, rank the test and provide any textual feedback to be considerate by those attempting on using the collected data on research studies.                       It is important, to follow direction and messages displayed by the application, so the data is appropriately stored. If there is no problem with the collected data, the patient's record will be update immediately, showing the date of the most recent test performed (as showed in below section of the Record screen).",
            "title": "- Evaluation of test performed"
        },
        {
            "location": "/application/#-upload-data",
            "text": "Finally, in order to upload the data towards the Fiware server. It is paramount to open the Settings section, located on the left menu. Then, click on the [ Upload Data ] buttons.",
            "title": "- Upload data"
        },
        {
            "location": "/application/#-other-services",
            "text": "There are a few relevant services to take into consideration. For instance, in order to be able of uploading data to the Fiware server, it is necessary to hold an activation code (which keeps control of the users with privileges share data onto the main server). This data is controlled by the owner of the application, so, different mechanism could be used to provide it.                   Moreover, complementary information about the applications.                   And ethical aspects can be found within respective section.",
            "title": "- Other services"
        },
        {
            "location": "/dashboard/",
            "text": "Dashboard\n\n\nWalkthrough",
            "title": "Dashboard"
        },
        {
            "location": "/dashboard/#dashboard",
            "text": "",
            "title": "Dashboard"
        },
        {
            "location": "/dashboard/#walkthrough",
            "text": "",
            "title": "Walkthrough"
        },
        {
            "location": "/architecture/",
            "text": "Architecture\n\n\nThe architecture the most common services required in terms of a data sensing application.  \n\n\nPlease note that the mobile applications is to be used as tools to collect mobile devices sensor-data (e.g., accelerometer, orientation) while patients perform a set of physical activities. The generated applications are meant to be installed in a smartphone / smartwatch that will be worn by the participant. \n\n\nIn this context, data has been collected on each device and will eventually sent to FIWARE Cloud by calling respective RESTful verbs. Data will connect to Orion Context Broker through the PEP component (Police Enforcement Point), which will invoke a filter mechanism to ensure that only expected data will be analyzed. Once data has been stored into Cosmos Big Data GE and processed by Theseus (a component that analyzes small amounts of data), data is then retrieved using Bifrost; which serves as an broker that transports query parameters from the Wirecloud GE. Finally, data retrieved from the Cosmos GE, it is sent back to Bifrost in order to be displayed on their corresponding  widgets.\n\n\n\n\nThe Scenario\u2019s main contributions focus on three components:\n\n\nTheseus.\n A python-based implementation of open-source software to facilitate the analysis of data. It doesn\u2019t try to compete with the available Data Analytic GE, but to complement it for quick prototyping purposes by using public libraries, such as SciPy.\n\n\nBifrost.\n A software implementation  developed on python using the Flink framework  to connect widgets with historical data components. Bifrost serves as a broker that transports query parameters from the Wirecloud GE to the Cosmos GE through an interpreter (analogically illustrated as a bridge). Once data is retrieved from the Cosmos GE, it is sent to the bridge, and then the data is parsed into NGSI format and sent back to the Wirecloud GE; so it can be displayed over corresponding widgets. \n\n\nSource code can be find in GitHub: \nBifrost\n\n\noHealth-Browser.\n A software widget developed to handle three different modules: Participants, Physical test, and Parameters of Interest. Altogether, functions are built into a single component which can be extended in order to cover a wider range of services. The GUI is personalized based on basic information, such as the IP address of the remote service (e.g., Cosmos or a third party server), Module of service (i.e., Participants, PhysicalTest, or ParameterOfInteres), and Attributes to retrieve, among others.\n\n\nSource code can be find in GitHub: \noHealth-Browser",
            "title": "Architecture"
        },
        {
            "location": "/architecture/#architecture",
            "text": "The architecture the most common services required in terms of a data sensing application.    Please note that the mobile applications is to be used as tools to collect mobile devices sensor-data (e.g., accelerometer, orientation) while patients perform a set of physical activities. The generated applications are meant to be installed in a smartphone / smartwatch that will be worn by the participant.   In this context, data has been collected on each device and will eventually sent to FIWARE Cloud by calling respective RESTful verbs. Data will connect to Orion Context Broker through the PEP component (Police Enforcement Point), which will invoke a filter mechanism to ensure that only expected data will be analyzed. Once data has been stored into Cosmos Big Data GE and processed by Theseus (a component that analyzes small amounts of data), data is then retrieved using Bifrost; which serves as an broker that transports query parameters from the Wirecloud GE. Finally, data retrieved from the Cosmos GE, it is sent back to Bifrost in order to be displayed on their corresponding  widgets.   The Scenario\u2019s main contributions focus on three components:  Theseus.  A python-based implementation of open-source software to facilitate the analysis of data. It doesn\u2019t try to compete with the available Data Analytic GE, but to complement it for quick prototyping purposes by using public libraries, such as SciPy.  Bifrost.  A software implementation  developed on python using the Flink framework  to connect widgets with historical data components. Bifrost serves as a broker that transports query parameters from the Wirecloud GE to the Cosmos GE through an interpreter (analogically illustrated as a bridge). Once data is retrieved from the Cosmos GE, it is sent to the bridge, and then the data is parsed into NGSI format and sent back to the Wirecloud GE; so it can be displayed over corresponding widgets.   Source code can be find in GitHub:  Bifrost  oHealth-Browser.  A software widget developed to handle three different modules: Participants, Physical test, and Parameters of Interest. Altogether, functions are built into a single component which can be extended in order to cover a wider range of services. The GUI is personalized based on basic information, such as the IP address of the remote service (e.g., Cosmos or a third party server), Module of service (i.e., Participants, PhysicalTest, or ParameterOfInteres), and Attributes to retrieve, among others.  Source code can be find in GitHub:  oHealth-Browser",
            "title": "Architecture"
        }
    ]
}